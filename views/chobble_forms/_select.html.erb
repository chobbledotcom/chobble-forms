<%
  # Get i18n_base from section (already validated there)
  setup = form_field_setup(field, local_assigns)

  # Form field options
  required ||= false
  combobox = local_assigns[:combobox] || false

  # Options should be:
  # - For select: options_for_select array or collection_select params
  # - For collection_select: [collection, value_method, text_method]
  options ||= []
  collection_select_params = local_assigns[:collection_select_params]
  prompt = local_assigns[:prompt]

  # Build select options
  select_options = {}
  select_options[:prompt] = prompt if prompt

  # Build field options
  field_options = { required: required, autocomplete: false }.compact

  # Add any additional HTML attributes
  field_options[:onchange] = local_assigns[:onchange] if local_assigns[:onchange]
  field_options[:list] = "#{field}_datalist_#{setup[:form_object].object.object_id}" if combobox
%>

<%= setup[:form_object].label field, setup[:field_label] %>
<% if combobox %>
  <%= setup[:form_object].text_field field, field_options %>
  <datalist id="<%= field_options[:list] %>">
    <% options.each do |option| %>
      <% value = option.is_a?(Array) ? option.last : option %>
      <% text = option.is_a?(Array) ? option.first : option %>
      <option value="<%= value %>"><%= text %></option>
    <% end %>
  </datalist>
<% elsif collection_select_params %>
  <%= setup[:form_object].collection_select(
        field,
        collection_select_params[:collection],
        collection_select_params[:value_method],
        collection_select_params[:text_method],
        select_options,
        field_options
      ) %>
<% else %>
  <%= setup[:form_object].select field, options, select_options, field_options %>
<% end %>
<% if setup[:field_hint].present? %>
  <small><%= setup[:field_hint] %></small>
<% end %>
